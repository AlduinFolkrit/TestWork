<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/security  https://www.springframework.org/schema/security/spring-security.xsd" >

    <context:component-scan base-package="ru.k2.pharmacy_hospital"/>
    <tx:annotation-driven proxy-target-class="true"/>
    <mvc:annotation-driven />

<!--    Блок настройки для работы с БД-->

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://localhost:5432/pharmacy"/>
        <property name="username" value="postgres"/>
        <property name="password" value="0"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="ru.k2.pharmacy_hospital"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect</prop>
                <prop key="hibernate..hbm2ddl.auto">true</prop>
            </props>
        </property>
    </bean>

    <bean class="org.springframework.orm.hibernate5.HibernateTransactionManager" id="transactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--PersistenceExceptionTranslationPostProcessor - это механизм постобработки компонентов, добавляющий
 объект-советник во все компоненты, отмеченные аннотацией @Repository , который будет перехватывать
 все специфические исключения и  преобразовывать их в соответствующие неконтролируемые исключения Spring.-->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

<!--    Блок  настройки ViewResolver'a  -->

<!--    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
<!--        <property name="prefix" value="/jsp/"/>-->
<!--        <property name="suffix" value=".jsp"/>-->
<!--    </bean>-->

    <bean id="templateResolver" class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/templates/"/>
        <property name="suffix" value=".html"/>
    </bean>

    <bean id="templateEngine" class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
    </bean>

    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"/>
        <property name="characterEncoding" value="UTF-8"/>
    </bean>

<!--    Блок настройки Security-->

    <security:global-method-security secured-annotations="enabled"/>

    <bean name="passwordEncoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <security:jdbc-user-service data-source-ref="dataSource" id="securityJdbc"
            users-by-username-query="select   login ,  password, true  from users where login = ?;"
            authorities-by-username-query="select login, 'ROLE_ADMIN' from users where login = ?;"/>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="securityJdbc">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <security:http auto-config="true"    use-expressions="true">
        <security:form-login
                login-page="/logining"
                login-processing-url="/login"
                authentication-failure-url="/logining"/>
        <!--                default-target-url="/account/list"-->
        <security:http-basic />
        <security:logout />
<!--        <security:intercept-url pattern="/" access="isAuthenticated()"/>-->
<!--        <security:intercept-url pattern="/account/list" access="hasRole('Admin')"/>-->
    </security:http>

</beans>